#!/bin/bash
# Script pour r√©cup√©rer le Team ID personnel
# Usage: ./get-personal-team-id.sh

set -euo pipefail

echo "üçé R√©cup√©ration du Team ID personnel"
echo "==================================="
echo ""

# Demander les credentials
read -p "üçé Apple ID (email): " APPLE_ID
read -s -p "üîë Mot de passe sp√©cifique: " APPLE_APP_SPECIFIC_PASSWORD
echo ""

echo ""
echo "üîç Tentatives de r√©cup√©ration du Team ID personnel..."

# M√©thode 1: notarytool info avec format diff√©rent
echo "üìã M√©thode 1 - notarytool info (format complet):"
if command -v xcrun &> /dev/null; then
    echo "Tentative avec notarytool info..."
    xcrun notarytool info --apple-id "$APPLE_ID" --password "$APPLE_APP_SPECIFIC_PASSWORD" 2>&1 | grep -i "team\|organization\|member" || echo "Aucune information trouv√©e"
else
    echo "‚ùå Xcode Command Line Tools non install√©"
fi
echo ""

# M√©thode 2: altool avec format diff√©rent
echo "üìã M√©thode 2 - altool list-providers (format complet):"
if command -v xcrun &> /dev/null; then
    echo "Tentative avec altool..."
    xcrun altool --list-providers -u "$APPLE_ID" -p "$APPLE_APP_SPECIFIC_PASSWORD" 2>&1 | grep -i "team\|organization\|member" || echo "Aucune information trouv√©e"
else
    echo "‚ùå Xcode Command Line Tools non install√©"
fi
echo ""

# M√©thode 3: Essayer de cr√©er un certificat pour voir le Team ID
echo "üìã M√©thode 3 - Test de cr√©ation de certificat:"
if command -v xcrun &> /dev/null; then
    echo "Tentative de cr√©ation de certificat de test..."
    TEMP_DIR=$(mktemp -d)
    cd "$TEMP_DIR"
    
    # Cr√©er un certificat de test
    xcrun security create-certificate-signing-request \
        -keychain login.keychain \
        -reqfile test.csr \
        -key-size 2048 \
        -key-algorithm rsa \
        -key-usage digitalSignature,keyEncipherment \
        -subject "CN=Test Developer" 2>&1 | grep -i "team\|organization" || echo "Aucune information trouv√©e"
    
    cd - > /dev/null
    rm -rf "$TEMP_DIR"
else
    echo "‚ùå Xcode Command Line Tools non install√©"
fi
echo ""

# M√©thode 4: V√©rifier les certificats existants
echo "üìã M√©thode 4 - Certificats existants:"
if command -v security &> /dev/null; then
    echo "Recherche de certificats existants..."
    security find-identity -v -p codesigning 2>&1 | grep -i "apple\|development\|team" || echo "Aucun certificat trouv√©"
else
    echo "‚ùå Commande security non disponible"
fi
echo ""

echo "üéØ Solutions alternatives:"
echo ""
echo "1Ô∏è‚É£  Cr√©er un certificat de d√©veloppement:"
echo "   - Ouvrir Xcode"
echo "   - Xcode > Preferences > Accounts"
echo "   - Ajouter votre Apple ID"
echo "   - Cliquer sur 'Manage Certificates'"
echo "   - Cr√©er un certificat de d√©veloppement"
echo ""

echo "2Ô∏è‚É£  Utiliser un Team ID par d√©faut:"
echo "   - Pour les comptes personnels, essayez:"
echo "   - Votre Apple ID sans @ (ex: yoelibarthel603gmailcom)"
echo "   - Ou votre nom d'utilisateur Apple"
echo ""

echo "3Ô∏è‚É£  V√©rifier dans Apple Developer Portal:"
echo "   - https://developer.apple.com/account/"
echo "   - Cliquer sur 'Certificates, Identifiers & Profiles'"
echo "   - Regarder dans 'Certificates' ou 'Identifiers'"
echo ""

echo "4Ô∏è‚É£  Contacter Apple Developer Support:"
echo "   - https://developer.apple.com/contact/"
echo "   - Demander votre Team ID personnel"
echo ""

echo "üîß Test avec Team ID par d√©faut:"
echo "Tentative avec Apple ID comme Team ID..."
TEST_TEAM_ID=$(echo "$APPLE_ID" | sed 's/@.*//')
echo "Team ID sugg√©r√©: $TEST_TEAM_ID"
echo ""
echo "Vous pouvez essayer d'ajouter ce Team ID comme secret GitHub:"
echo "Name: TEAM_ID"
echo "Value: $TEST_TEAM_ID"
