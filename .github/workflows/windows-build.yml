name: build-windows-installer

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          } elseif (Test-Path "Sidour-avoda-Tzora-chevron/requirements.txt") {
            pip install -r "Sidour-avoda-Tzora-chevron/requirements.txt"
          } else {
            Write-Host "No requirements.txt found, continuing with PyInstaller only."
          }

      - name: Build portable exe with PyInstaller
        shell: pwsh
        run: |
          $proj = if (Test-Path "Sidour-avoda-Tzora-chevron/main.py") { "Sidour-avoda-Tzora-chevron" } elseif (Test-Path "main.py") { "." } else { "." }
          Set-Location $proj
          $main = "main.py"
          $icon = if (Test-Path "assets/calender-2389150_960_720.png") { "assets/calender-2389150_960_720.png" } else { $null }
          $db = if (Test-Path "planning_data.db") { "planning_data.db" } elseif (Test-Path "../planning_data.db") { "../planning_data.db" } else { $null }

          $piArgs = @("--noconsole", "--name", "SidourAvoda", "--clean")
          # Assurer que le r√©pertoire des modules locaux est dans l'analyse
          $piArgs += @('--paths', '.')
          # Forcer l'inclusion de modules locaux si l'analyse statique les rate
          $hidden = @('interface','planning','database','horaire','travailleur')
          foreach ($m in $hidden) { $piArgs += @('--hidden-import', $m) }
          if ($icon) {
            $piArgs += @("--icon", $icon, "--add-data", "$icon;assets")
          }
          if ($db) {
            $piArgs += @("--add-data", "$db;.")
          }
          $piArgs += @($main)

          Write-Host ("PyInstaller arg list: " + ($piArgs -join ' '))
          pyinstaller @piArgs

      - name: Upload portable build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sidour-avoda-win-portable
          path: |
            dist/**
            Sidour-avoda-Tzora-chevron/dist/**

      - name: Install Inno Setup
        run: choco install innosetup --yes

      - name: Build Windows installer (Inno Setup)
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "Sidour-avoda-Tzora-chevron\windows_installer.iss"

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: sidour-avoda-setup
          path: Sidour-avoda-Tzora-chevron/dist_installer/**

      - name: Create GitHub Release and upload assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Sidour-avoda-Tzora-chevron/dist_installer/Sidour-Avoda-Setup.exe
            Sidour-avoda-Tzora-chevron/dist/SidourAvoda/SidourAvoda.exe


